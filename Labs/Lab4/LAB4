	.ORIG  x3200

	ARRAY	.BLKW 	200
	LD R5, ARRAY
	ARRAY1	.BLKW	200
	LD R6, ARRAY1
	
	LEA R0, GREETING
	PUTS


WELCOME
	LEA R0, START
	PUTS
	AND R1, R1, 0		;INT
	AND R2, R2, 0

READINPUT
	GETC
	OUT
	LD R4, EXIT
	ADD R3, R0, R4
	BRnp CENTERPROCESS
	LEA R0, BYE
	PUTS
	HALT
	EXIT		.FILL		#-120
	DECR		.FILL 		#-100
	ENCR		.FILL		#-101
	ZERO		.FILL		#-48
	NEGATIVE	.FILL 		#-45


CENTERPROCESS
	LD R4, DECR
	ADD R3, R0, R4
	BRnp CENTERPROCESS2
	BR CIPHE1

CIPHE1
	LEA R0, CIPHER
	PUTS

KEY1
	GETC
	OUT
	ADD R3, R0, -10
	BRz TWOSCOMPLEMENT1		;IF CHAR == LF
	LD R4, NEGATIVE			;LOAD '-' INTO R4
	ADD R3, R0, R4			;FOR COMPARIOSN PURPOSE
	BRz FLAGGOBACKINPUT1		;IF CHAR == '-' GO TO THIS PROCEDURE
	LD R4, ZERO			;LOAD -48 INTO R4
	ADD R0,R0,R4			;SINCE CHAR != -, SUBTRACT 48 FROM THE ENTERED CHAR
	JSR MULTISETUP1			;JUMP TO THIS SUBROUTINE. WHEREEVER WE SEE RET, IT WILL TAKE US BACK TO THIS PROCEDURE
	ADD R1, R1, R0			
	BR KEY1				;GO BACK TO THIS PROCEDURE UNDER ANY CONDITION

FLAGGOBACKINPUT1
	ADD R2, R2, 1			;FLAG == 1
	BR READINPUT			;GO BACK TO READINPUT NO MATTER WHAT

TWOSCOMPLEMENT1
	ADD R2, R2, -1			;FLAG == 1 (NEGATIVE)
	BRn PREPARE1			;FLAG != 1 (1 < 0 WHICH IS FALSE)
	NOT R1, R1			;INVERT, INT != INT
	ADD R1, R1, 1			;ADD 1, INT = INT + 1

PREPARE1
	LEA R0, STRING			;LOAD STRING MESSAGE
	PUTS
	BR STRINGS1			;GO TO STRINGS NO MATTER WHAT


CENTERPROCESS2
	LD R4, ENCR
	ADD R3, R0, R4

CIPHE
	LEA R0, CIPHER
	PUTS

KEY
	GETC
	OUT
	ADD R3, R0, -10
	BRz TWOSCOMPLEMENT		;IF CHAR == LF
	LD R4, NEGATIVE			;LOAD '-' INTO R4
	ADD R3, R0, R4			;FOR COMPARIOSN PURPOSE
	BRz FLAGGOBACKINPUT		;IF CHAR == '-' GO TO THIS PROCEDURE
	LD R4, ZERO			;LOAD -48 INTO R4
	ADD R0,R0,R4			;SINCE CHAR != -, SUBTRACT 48 FROM THE ENTERED CHAR
	JSR MULTISETUP			;JUMP TO THIS SUBROUTINE. WHEREEVER WE SEE RET, IT WILL TAKE US BACK TO THIS PROCEDURE
	ADD R1, R1, R0			
	BR KEY				;GO BACK TO THIS PROCEDURE UNDER ANY CONDITION

FLAGGOBACKINPUT
	ADD R2, R2, 1			;FLAG == 1
	BR READINPUT			;GO BACK TO READINPUT NO MATTER WHAT

TWOSCOMPLEMENT
	ADD R2, R2, -1			;FLAG == 1 (NEGATIVE)
	BRn PREPARE			;FLAG != 1 (1 < 0 WHICH IS FALSE)
	NOT R1, R1			;INVERT, INT != INT
	ADD R1, R1, 1			;ADD 1, INT = INT + 1

PREPARE
	LEA R0, STRING			;LOAD STRING MESSAGE
	PUTS
	BR STRINGS			;GO TO STRINGS NO MATTER WHAT


MULTISETUP1
;---------------------PREPARING THE LOOP FOR MULTIPLYING DECRYPT---------------------
	ADD R3, R1, 0			;ADD O TO R1 AND VALUE IN R3
	AND R4, R4, 0			;SET R4 TO 0	
	ADD R4, R4, 9			;0 -9 (R4 = COUNTER, LOOP 10 TIMES)

MULTIPLICATION1
	BRz RETURN1			;GO HERE TO ENTER MORE THAN ONE CHAR(DIGIT)
	ADD R1, R1, R3			;INT = INT X 10 + DIGIT
	ADD R4, R4, -1			;DECREMENT COUNTER
	BR MULTIPLICATION1		;MULTIPLY UNTIL DONE (NO CONDITION)

RETURN1
	
	;LD R3, 0			;LOAD 0 INTO R3
	;LD R4, 0			;LOAD 0 INTO R4 BEFORE GOING BACK TO CENTERPROCESS
	RET 				;RETURN BACK TO CENTERPROCESS
					;AND CONTINUE WTH THE INSTRUCTION AFTER JSR CALL






MULTISETUP
;---------------------PREPARING THE LOOP FOR MULTIPLYING ENCRYPT---------------------
	ADD R3, R1, 0			;ADD O TO R1 AND VALUE IN R3
	AND R4, R4, 0			;SET R4 TO 0	
	ADD R4, R4, 9			;0 -9 (R4 = COUNTER, LOOP 10 TIMES)

MULTIPLICATION
	BRz RETURN			;GO HERE TO ENTER MORE THAN ONE CHAR(DIGIT)
	ADD R1, R1, R3			;INT = INT X 10 + DIGIT
	ADD R4, R4, -1			;DECREMENT COUNTER
	BR MULTIPLICATION		;MULTIPLY UNTIL DONE (NO CONDITION)

RETURN
	
	;LD R3, 0			;LOAD 0 INTO R3
	;LD R4, 0			;LOAD 0 INTO R4 BEFORE GOING BACK TO CENTERPROCESS
	RET 				;RETURN BACK TO CENTERPROCESS
					;AND CONTINUE WTH THE INSTRUCTION AFTER JSR CALL

STRINGS1
	GETC 
	OUT

	ADD R3, R0, -10
	BRz DECHECK

	STR R0, R4, 0
	ADD R4, R4, 1
	BR STRINGS1
	

DECHECK
	LEA R0, RESULT1
	PUTS

STRINGS
	GETC 
	OUT

	ADD R3, R0, -10
	BRz ECHECK

	STR R0, R4, 0
	ADD R4, R4, 1
	BR STRINGS

ECHECK
	LEA R0, RESULT2
	PUTS
	
	

HALT

GREETING	.STRINGZ	"Hello, welcome to my Caesar Cipher program\n"
START		.STRINGZ	"Do you want to (E)ncrypt or D(ecrypt) or e(X)it?\n"
BYE		.STRINGZ	"Goodbye!!"
CIPHER		.STRINGZ	"\nWhat is the cipher (1-25)?\n"
DEC		.STRINGZ 	"DECRYPT\n"
ENC		.STRINGZ	"ENCRYPT\n"
STRING		.STRINGZ 	"What is the string (up to 200 characters)?\n"
RESULT1		.STRINGZ	"Result Decrypt: \n"
RESULT2		.STRINGZ	"Result Encrypt: \n"



.END